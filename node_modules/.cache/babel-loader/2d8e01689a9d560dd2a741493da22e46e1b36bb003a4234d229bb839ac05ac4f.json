{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  state: {\n    addContest: \"\",\n    contestIdData: \"\",\n    register: \"\",\n    login: \"\"\n  },\n  getters: {\n    getAddContest: state => {\n      return state.addContest;\n    },\n    getContestIdData: state => {\n      return state.contestIdData;\n    },\n    getRegister: state => {\n      return state.register;\n    },\n    getLogin: state => {\n      return state.login;\n    }\n  },\n  mutations: {\n    setAddContest: (state, value) => {\n      state.addContest = value;\n    },\n    setContestIdData: (state, value) => {\n      state.contestIdData = value;\n    },\n    setRegister: (state, value) => {\n      state.register = value;\n    }\n  },\n  actions: {\n    async ADD_CONTEST({\n      commit\n    }, {\n      payload,\n      successData\n    }) {\n      const response = await axios.post(\"/api/QuizMaster/addContest\", payload);\n      console.log(\"from Contest store\", response.data);\n      if (response.data) {\n        successData(response.data);\n      }\n      commit('setAddContest', response.data);\n    },\n    async GET_CONTEST_BY_ID({\n      commit\n    }, {\n      id,\n      successData\n    }) {\n      // /contest/getContestById/{id}\n      const response = await axios.get(\"/api/contest/getContestById/\" + id);\n\n      // console.log(response.data)\n      successData(response.data);\n      commit('setContestIdData', response.data);\n    },\n    async REGISTER({\n      commit\n    }, {\n      payload\n    }) {\n      const response = await axios.post(\"/api/auth/register\", payload);\n      console.log(\"reponse data\", response);\n      commit('setRegister', response.data);\n    },\n    async LOGIN({\n      commit\n    }, {\n      payload\n    }) {\n      const response = await axios.post(\"/api/auth/login\", payload);\n      console.log(\"response login\", response);\n      commit(\"serLogin\", response);\n    }\n  }\n};","map":{"version":3,"names":["axios","state","addContest","contestIdData","register","login","getters","getAddContest","getContestIdData","getRegister","getLogin","mutations","setAddContest","value","setContestIdData","setRegister","actions","ADD_CONTEST","commit","payload","successData","response","post","console","log","data","GET_CONTEST_BY_ID","id","get","REGISTER","LOGIN"],"sources":["/Users/yeshwanthmunagapati/Desktop/Team6-Quiz/frontend/guiz-app/src/store/QuizMaster.js"],"sourcesContent":["import axios from \"axios\";\n\nexport default {\n    state: {\n        addContest: \"\",\n        contestIdData: \"\",\n        register: \"\",\n        login: \"\",\n    },\n    getters: {\n        getAddContest: (state) => {\n            return state.addContest\n        },\n        getContestIdData: (state) => {\n            return state.contestIdData\n        },\n        getRegister: (state) => {\n            return state.register\n        },\n        getLogin: (state) => {\n            return state.login\n        }\n    },\n    mutations: {\n        setAddContest: (state, value) => {\n            state.addContest = value;\n        },\n        setContestIdData: (state, value) => {\n            state.contestIdData = value\n        },\n        setRegister: (state, value) => {\n            state.register = value\n        }\n    },\n    actions: {\n        async ADD_CONTEST({commit}, {payload, successData}) {\n            const response = await axios.post(\"/api/QuizMaster/addContest\", payload);\n            console.log(\"from Contest store\",response.data)\n            if(response.data) {\n                successData(response.data)\n            }\n            commit('setAddContest', response.data)\n        },\n        async GET_CONTEST_BY_ID({commit}, { id, successData}) {\n            // /contest/getContestById/{id}\n            const response = await axios.get(\"/api/contest/getContestById/\"+ id);\n            \n            // console.log(response.data)\n            successData(response.data)\n            commit('setContestIdData', response.data)\n        },\n        async REGISTER({commit}, {payload}) {\n            const response = await axios.post(\"/api/auth/register\", payload) \n            console.log(\"reponse data\",response)\n            commit('setRegister', response.data)\n        },\n        async LOGIN({commit}, {payload}) {\n            const response = await axios.post(\"/api/auth/login\", payload)\n            console.log(\"response login\", response)\n            commit(\"serLogin\", response);\n        }\n\n    },\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,eAAe;EACXC,KAAK,EAAE;IACHC,UAAU,EAAE,EAAE;IACdC,aAAa,EAAE,EAAE;IACjBC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACX,CAAC;EACDC,OAAO,EAAE;IACLC,aAAa,EAAGN,KAAK,IAAK;MACtB,OAAOA,KAAK,CAACC,UAAU;IAC3B,CAAC;IACDM,gBAAgB,EAAGP,KAAK,IAAK;MACzB,OAAOA,KAAK,CAACE,aAAa;IAC9B,CAAC;IACDM,WAAW,EAAGR,KAAK,IAAK;MACpB,OAAOA,KAAK,CAACG,QAAQ;IACzB,CAAC;IACDM,QAAQ,EAAGT,KAAK,IAAK;MACjB,OAAOA,KAAK,CAACI,KAAK;IACtB;EACJ,CAAC;EACDM,SAAS,EAAE;IACPC,aAAa,EAAE,CAACX,KAAK,EAAEY,KAAK,KAAK;MAC7BZ,KAAK,CAACC,UAAU,GAAGW,KAAK;IAC5B,CAAC;IACDC,gBAAgB,EAAE,CAACb,KAAK,EAAEY,KAAK,KAAK;MAChCZ,KAAK,CAACE,aAAa,GAAGU,KAAK;IAC/B,CAAC;IACDE,WAAW,EAAE,CAACd,KAAK,EAAEY,KAAK,KAAK;MAC3BZ,KAAK,CAACG,QAAQ,GAAGS,KAAK;IAC1B;EACJ,CAAC;EACDG,OAAO,EAAE;IACL,MAAMC,WAAW,CAAC;MAACC;IAAM,CAAC,EAAE;MAACC,OAAO;MAAEC;IAAW,CAAC,EAAE;MAChD,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,4BAA4B,EAAEH,OAAO,CAAC;MACxEI,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAACH,QAAQ,CAACI,IAAI,CAAC;MAC/C,IAAGJ,QAAQ,CAACI,IAAI,EAAE;QACdL,WAAW,CAACC,QAAQ,CAACI,IAAI,CAAC;MAC9B;MACAP,MAAM,CAAC,eAAe,EAAEG,QAAQ,CAACI,IAAI,CAAC;IAC1C,CAAC;IACD,MAAMC,iBAAiB,CAAC;MAACR;IAAM,CAAC,EAAE;MAAES,EAAE;MAAEP;IAAW,CAAC,EAAE;MAClD;MACA,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAAC4B,GAAG,CAAC,8BAA8B,GAAED,EAAE,CAAC;;MAEpE;MACAP,WAAW,CAACC,QAAQ,CAACI,IAAI,CAAC;MAC1BP,MAAM,CAAC,kBAAkB,EAAEG,QAAQ,CAACI,IAAI,CAAC;IAC7C,CAAC;IACD,MAAMI,QAAQ,CAAC;MAACX;IAAM,CAAC,EAAE;MAACC;IAAO,CAAC,EAAE;MAChC,MAAME,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,oBAAoB,EAAEH,OAAO,CAAC;MAChEI,OAAO,CAACC,GAAG,CAAC,cAAc,EAACH,QAAQ,CAAC;MACpCH,MAAM,CAAC,aAAa,EAAEG,QAAQ,CAACI,IAAI,CAAC;IACxC,CAAC;IACD,MAAMK,KAAK,CAAC;MAACZ;IAAM,CAAC,EAAE;MAACC;IAAO,CAAC,EAAE;MAC7B,MAAME,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,iBAAiB,EAAEH,OAAO,CAAC;MAC7DI,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,QAAQ,CAAC;MACvCH,MAAM,CAAC,UAAU,EAAEG,QAAQ,CAAC;IAChC;EAEJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}