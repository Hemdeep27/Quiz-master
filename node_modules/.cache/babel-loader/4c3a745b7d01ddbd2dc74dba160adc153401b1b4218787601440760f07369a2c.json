{"ast":null,"code":"export default {\n  name: \"AnswerComponent\",\n  emits: [\"answers\"],\n  props: {\n    answerType: {\n      typeof: String,\n      default: \"single\",\n      require: true\n    },\n    optionsData: {\n      typeof: Array,\n      default: [],\n      require: true\n    }\n  },\n  computed: {\n    answerMulti() {\n      if (this.answerType === \"MULTI\") {\n        return true;\n      }\n      return false;\n    },\n    answerSingle() {\n      if (this.answerType === \"SINGLE\") {\n        return true;\n      }\n      return false;\n    }\n  },\n  data() {\n    return {\n      options: [{\n        text: this.optionsData[0],\n        value: this.optionsData[0]\n      }, {\n        text: this.optionsData[1],\n        value: this.optionsData[1]\n      }, {\n        text: this.optionsData[2],\n        value: this.optionsData[2]\n      }, {\n        text: this.optionsData[3],\n        value: this.optionsData[3]\n      }],\n      answer: [],\n      singleAnswer: \"\"\n    };\n  },\n  watch: {\n    answer() {\n      for (let i = 0; i < 4; i++) {\n        if (this.answer[i]) {\n          this.answer[i] = this.optionsData[i];\n        } else {\n          this.answer[i] = \"\";\n        }\n      }\n      console.log(this.answer);\n    },\n    singleAnswer() {\n      this.answer[0] = this.singleAnswer;\n      console.log(this.answer);\n    }\n  },\n  methods: {\n    AnswerHandler(data) {\n      data = this.answer;\n      this.$emit(\"answers\", data);\n    }\n  }\n};","map":{"version":3,"mappings":"AA0CA;EACAA;EACAC;EACAC;IACAC;MACAC;MACAC;MACAC;IACA;IACAC;MACAH;MACAC;MACAC;IACA;EACA;EACAE;IACAC;MACA;QACA;MACA;MACA;IACA;IACAC;MACA;QACA;MACA;MACA;IACA;EACA;EACAC;IACA;MACAC,UACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,EACA;MACAC;MACAC;IACA;EACA;EACAC;IACAF;MACA;QACA;UACA;QACA;UACA;QACA;MACA;MACAG;IACA;IACAF;MACA;MACAE;IACA;EACA;EACAC;IACAC;MACAT;MACA;IACA;EACA;AACA","names":["name","emits","props","answerType","typeof","default","require","optionsData","computed","answerMulti","answerSingle","data","options","text","value","answer","singleAnswer","watch","console","methods","AnswerHandler"],"sourceRoot":"src/components","sources":["AnswerComponent.vue"],"sourcesContent":["<template>\n  <div class=\"answer\">\n    <h1>This is Answers Component</h1>\n    <h2>Choose your answers</h2>\n    <div v-if=\"answerMulti\" class=\"multi\">\n      <div>\n        <input type=\"checkbox\" name=\"option1\" v-model=\"answer[0]\" />\n        <label>{{ optionsData[0] }}</label>\n      </div>\n      <div>\n        <input type=\"checkbox\" name=\"option2\" v-model=\"answer[1]\" />\n        <label>{{ optionsData[1] }}</label>\n      </div>\n      <div>\n        <input type=\"checkbox\" name=\"option3\" v-model=\"answer[2]\" />\n        <label>{{ optionsData[2] }}</label>\n      </div>\n      <div>\n        <input type=\"checkbox\" name=\"option4\" v-model=\"answer[3]\" />\n        <label>{{ optionsData[3] }}</label>\n      </div>\n      <div>\n        <p>confirm first and then Click Next</p>\n        <button @click=\"AnswerHandler\">Confirm</button>\n      </div>\n    </div>\n    <div v-if=\"answerSingle\">\n      <select v-model=\"singleAnswer\" @change=\"AnswerHandler\">\n        <option\n          v-for=\"option in options\"\n          :value=\"option.value\"\n          :key=\"option.id\"\n        >\n          {{ option.text }}\n        </option>\n      </select>\n      <!-- {{optionsData}} -->\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"AnswerComponent\",\n  emits: [\"answers\"],\n  props: {\n    answerType: {\n      typeof: String,\n      default: \"single\",\n      require: true,\n    },\n    optionsData: {\n      typeof: Array,\n      default: [],\n      require: true,\n    },\n  },\n  computed: {\n    answerMulti() {\n      if (this.answerType === \"MULTI\") {\n        return true;\n      }\n      return false;\n    },\n    answerSingle() {\n      if (this.answerType === \"SINGLE\") {\n        return true;\n      }\n      return false;\n    },\n  },\n  data() {\n    return {\n      options: [\n        { text: this.optionsData[0], value: this.optionsData[0] },\n        { text: this.optionsData[1], value: this.optionsData[1] },\n        { text: this.optionsData[2], value: this.optionsData[2] },\n        { text: this.optionsData[3], value: this.optionsData[3] },\n      ],\n      answer: [],\n      singleAnswer: \"\",\n    };\n  },\n  watch: {\n    answer() {\n      for (let i = 0; i < 4; i++) {\n        if (this.answer[i]) {\n          this.answer[i] = this.optionsData[i];\n        } else {\n          this.answer[i] = \"\";\n        }\n      }\n      console.log(this.answer);\n    },\n    singleAnswer() {\n      this.answer[0] = this.singleAnswer;\n      console.log(this.answer);\n    },\n  },\n  methods: {\n    AnswerHandler(data) {\n      data = this.answer;\n      this.$emit(\"answers\", data);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.answer {\n  /* display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column; */\n  height: calc(110vh - 340px);\n}\n\n.multi {\n  margin\n  display: flex;\n  font-size: 24px;\n  flex-direction: column;\n}\n\nselect {\n  width: 295px;\n  height: 49px;\n  border: none;\n  margin-top: 10px;\n  border: 2px solid red;\n  border-radius: 5px;\n  font-size: 25px;\n}\n\n.multi label {\n  position: relative;\n  top: -8px;\n  right: 70px;\n}\n\ninput {\n  display: inline;\n  width: 190px;\n  height: 20px;\n  border: none;\n  font-size: 18px;\n  border: 2px solid red;\n  border-radius: 5px;\n  margin-top: 10px;\n  font-size: 25px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}