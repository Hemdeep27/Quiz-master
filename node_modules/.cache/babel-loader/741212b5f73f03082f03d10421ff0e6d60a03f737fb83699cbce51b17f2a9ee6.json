{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport QuestionType from \"../components/QuestionType.vue\";\nimport QuestionComponent from \"../components/QuestionComponent.vue\";\nimport AnswerTypeComponent from \"../components/AnswerTypeComponent.vue\";\nimport AnswerComponent from \"../components/AnswerComponent.vue\";\nimport { mapActions, mapGetters } from \"vuex\";\nexport default {\n  name: \"AddQuestionView\",\n  data() {\n    return {\n      next: 0,\n      noOfQuestions: 0,\n      questionType: true,\n      question: false,\n      answerType: false,\n      answer: false,\n      payload: {\n        question: \"\",\n        questionUrl: \"\",\n        typeOfQuestion: \"\",\n        typeOfAnswer: \"\",\n        optionOne: \"\",\n        optionTwo: \"\",\n        optionThree: \"\",\n        optionFour: \"\",\n        difficultyLevel: \"\",\n        marks: 0,\n        answer: []\n      },\n      optionData: []\n    };\n  },\n  components: {\n    QuestionType,\n    QuestionComponent,\n    AnswerTypeComponent,\n    AnswerComponent\n  },\n  computed: {\n    ...mapGetters([\"getAddContest\", \"getAddQuestion\", \"getContestIdData\"]),\n    questionsCount() {\n      return this.getContestIdData.noOfQuestions;\n    }\n  },\n  watch: {},\n  methods: {\n    ...mapActions[(\"ADD_QUESTION\", \"GET_CONTEST_BY_ID\")],\n    questionTypeValue(value) {\n      // debugger;\n      this.payload.typeOfQuestion = value;\n      console.log(this.payload);\n    },\n    questionDataHandler(data) {\n      this.payload.question = data.question;\n      this.payload.questionUrl = data.questionUrl;\n      this.payload.difficultyLevel = data.difficulty;\n      this.payload.marks = data.marks;\n      this.payload.optionOne = data.optionOne;\n      this.payload.optionTwo = data.optionTwo;\n      this.payload.optionThree = data.optionThree;\n      this.payload.optionFour = data.optionFour;\n      this.optionData[0] = this.payload.optionOne;\n      this.optionData[1] = this.payload.optionTwo;\n      this.optionData[2] = this.payload.optionThree;\n      this.optionData[3] = this.payload.optionFour;\n      // console.log(\"emits question data\", this.payload)\n    },\n\n    answerTypeHandler(data) {\n      this.payload.typeOfAnswer = data;\n      // console.log(data);\n      // console.log(\"emits answer type\",this.payload)\n    },\n\n    answerDataHandler(data) {\n      this.payload.answer = data;\n      console.log(data);\n      console.log(\"emits answers data\", this.payload);\n    },\n    nextHandler() {\n      // data.push(\"\")\n      if (this.next === 0) {\n        // console.log(\"In question Type\")\n        this.questionType = !this.questionType, this.question = !this.question;\n        this.next++;\n      } else if (this.next === 1) {\n        // console.log(\"In question Type\")\n        this.question = !this.question, this.answerType = !this.answerType, this.next++;\n      } else if (this.next === 2) {\n        this.answerType = !this.answerType, this.answer = !this.answer, this.next++;\n      } else {\n        this.submitHandler();\n      }\n    },\n    submitHandler() {\n      console.log(\"Done\");\n      this.next = 0;\n      this.answer = !this.answer;\n      this.questionType = !this.questionType;\n      if (this.noOfQuestions === 1) {\n        this.$router.push(\"/\");\n      } else {\n        this.noOfQuestions--;\n      }\n      // this.$store.dispatch(\"ADD_CONTEST\", {payload: this.payload, contestId: this.getAddContest})\n      // console.log(\"router params\",this.$router.params);\n      this.$store.dispatch(\"ADD_QUESTION\", {\n        contestId: this.getAddContest,\n        payload: this.payload\n      });\n      // console.log(\"questionType: \", this.questionType)\n      // console.log(\"answerType: \", this.questionType)\n    }\n  },\n\n  created() {\n    // debugger;\n    console.log(\"static\", this.getAddContest);\n    this.$store.dispatch(\"GET_CONTEST_BY_ID\", {\n      id: this.getAddContest,\n      successData: data => {\n        this.noOfQuestions = data.noOfQuestions;\n        console.log(\"no of question: \", this.noOfQuestions);\n      }\n    });\n    console.log(\"dynamic\", this.getAddContest);\n    this.$store.dispatch(\"GET_DYNAMIC_ID\", {\n      id: this.getAddContest,\n      successData: data => {\n        this.noOfQuestions = data.noOfQuestions;\n        console.log(\"no of questions in Dynamic\", this.noOfQuestions);\n      }\n    });\n  }\n};","map":{"version":3,"mappings":";AA+BA;AACA;AACA;AACA;AACA;AACA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;QACAH;QACAI;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAV;MACA;MACAW;IACA;EACA;EACAC;IACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;IACAC;MACA;IACA;EACA;EACAC;EACAC;IACA;IACAC;MACA;MACA;MACAC;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;;IACAC;MACA;MACA;MACA;IACA;;IACAC;MACA;MACAH;MACAA;IACA;IACAI;MACA;MACA;QACA;QACA,wCACA;QACA;MACA;QACA;QACA,gCACA,oCACA;MACA;QACA,oCACA,4BACA;MACA;QACA;MACA;IACA;IACAC;MACAL;MACA;MACA;MACA;MACA;QACA;MACA;QACA;MACA;MACA;MACA;MACA;QACAM;QACA3B;MACA;MACA;MACA;IACA;EACA;;EACA4B;IACA;IACAP;IACA;MAAAQ;MAAAC;QACA;QACAT;MACA;IAAA;IACAA;IACA;MAAAQ;MAAAC;QACA;QACAT;MACA;IAAA;EACA;AACA","names":["name","data","next","noOfQuestions","questionType","question","answerType","answer","payload","questionUrl","typeOfQuestion","typeOfAnswer","optionOne","optionTwo","optionThree","optionFour","difficultyLevel","marks","optionData","components","QuestionType","QuestionComponent","AnswerTypeComponent","AnswerComponent","computed","questionsCount","watch","methods","questionTypeValue","console","questionDataHandler","answerTypeHandler","answerDataHandler","nextHandler","submitHandler","contestId","created","id","successData"],"sourceRoot":"src/views","sources":["AddQuestionView.vue"],"sourcesContent":["<template>\n  <div class=\"addQuestion\">\n    <h1>Question View</h1>\n    <question-type\n      v-if=\"questionType\"\n      @question-type=\"questionTypeValue\"\n    ></question-type>\n    <question-component\n      v-if=\"question\"\n      :questionType=\"payload.typeOfQuestion\"\n      @question-data=\"questionDataHandler\"\n    ></question-component>\n    <answer-type-component\n      v-if=\"answerType\"\n      @answer-type=\"answerTypeHandler\"\n    ></answer-type-component>\n    <answer-component\n      v-if=\"answer\"\n      :answerType=\"payload.typeOfAnswer\"\n      :optionsData=\"optionData\"\n      @answers=\"answerDataHandler\"\n    ></answer-component>\n    <button v-if=\"!answer\" @click=\"nextHandler\">Next</button>\n    <button v-if=\"answer\" @click=\"submitHandler\">Submit</button>\n    <!-- {{next}} -->\n    {{getContestIdData}}\n    {{}}\n  </div>\n</template>\n\n<script>\nimport QuestionType from \"../components/QuestionType.vue\";\nimport QuestionComponent from \"../components/QuestionComponent.vue\";\nimport AnswerTypeComponent from \"../components/AnswerTypeComponent.vue\";\nimport AnswerComponent from \"../components/AnswerComponent.vue\";\nimport { mapActions, mapGetters } from \"vuex\";\nexport default {\n  name: \"AddQuestionView\",\n  data() {\n    return {\n      next: 0,\n      noOfQuestions: 0,\n      questionType: true,\n      question: false,\n      answerType: false,\n      answer: false,\n      payload: {\n        question: \"\",\n        questionUrl: \"\",\n        typeOfQuestion: \"\",\n        typeOfAnswer: \"\",\n        optionOne: \"\",\n        optionTwo: \"\",\n        optionThree: \"\",\n        optionFour: \"\",\n        difficultyLevel: \"\",\n        marks: 0,\n        answer: [],\n      },\n      optionData: [],\n    };\n  },\n  components: {\n    QuestionType,\n    QuestionComponent,\n    AnswerTypeComponent,\n    AnswerComponent,\n  },\n  computed: {\n    ...mapGetters([\"getAddContest\", \"getAddQuestion\", \"getContestIdData\"]),\n    questionsCount() {\n      return this.getContestIdData.noOfQuestions;\n    },\n  },\n  watch: {},\n  methods: {\n    ...mapActions[\"ADD_QUESTION\", \"GET_CONTEST_BY_ID\"],\n    questionTypeValue(value) {\n      // debugger;\n      this.payload.typeOfQuestion = value;\n      console.log(this.payload);\n    },\n    questionDataHandler(data) {\n      this.payload.question = data.question;\n      this.payload.questionUrl = data.questionUrl;\n      this.payload.difficultyLevel = data.difficulty;\n      this.payload.marks = data.marks;\n      this.payload.optionOne = data.optionOne;\n      this.payload.optionTwo = data.optionTwo;\n      this.payload.optionThree = data.optionThree;\n      this.payload.optionFour = data.optionFour;\n      this.optionData[0] = this.payload.optionOne;\n      this.optionData[1] = this.payload.optionTwo;\n      this.optionData[2] = this.payload.optionThree;\n      this.optionData[3] = this.payload.optionFour;\n      // console.log(\"emits question data\", this.payload)\n    },\n    answerTypeHandler(data) {\n      this.payload.typeOfAnswer = data;\n      // console.log(data);\n      // console.log(\"emits answer type\",this.payload)\n    },\n    answerDataHandler(data) {\n      this.payload.answer = data;\n      console.log(data);\n      console.log(\"emits answers data\", this.payload);\n    },\n    nextHandler() {\n      // data.push(\"\")\n      if (this.next === 0) {\n        // console.log(\"In question Type\")\n        (this.questionType = !this.questionType),\n          (this.question = !this.question);\n        this.next++;\n      } else if (this.next === 1) {\n        // console.log(\"In question Type\")\n        (this.question = !this.question),\n          (this.answerType = !this.answerType),\n          this.next++;\n      } else if (this.next === 2) {\n        (this.answerType = !this.answerType),\n          (this.answer = !this.answer),\n          this.next++;\n      } else {\n        this.submitHandler();\n      }\n    },\n    submitHandler() {\n      console.log(\"Done\");\n      this.next = 0;\n      this.answer = !this.answer;\n      this.questionType = !this.questionType;\n      if (this.noOfQuestions === 1) {\n        this.$router.push(\"/\");\n      } else {\n        this.noOfQuestions--;\n      }\n      // this.$store.dispatch(\"ADD_CONTEST\", {payload: this.payload, contestId: this.getAddContest})\n      // console.log(\"router params\",this.$router.params);\n      this.$store.dispatch(\"ADD_QUESTION\", {\n        contestId: this.getAddContest,\n        payload: this.payload,\n      });\n      // console.log(\"questionType: \", this.questionType)\n      // console.log(\"answerType: \", this.questionType)\n    },\n  },\n  created() {\n    // debugger;\n    console.log(\"static\", this.getAddContest);\n    this.$store.dispatch(\"GET_CONTEST_BY_ID\", {id:this.getAddContest, successData: (data) => {\n      this.noOfQuestions = data.noOfQuestions;\n      console.log(\"no of question: \",this.noOfQuestions)\n    }});\n    console.log(\"dynamic\", this.getAddContest);\n    this.$store.dispatch(\"GET_DYNAMIC_ID\", {id:this.getAddContest, successData: (data) => {\n      this.noOfQuestions = data.noOfQuestions;\n      console.log(\"no of questions in Dynamic\", this.noOfQuestions)\n    }});\n  },\n};\n</script>\n\n<style scoped>\n.addQuestion {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin: 50px 0 100px 0;\n}\n\nh1 {\n    margin-bottom: 30px;\n}\n\nbutton {\n  width: 290px;\n  height: 45px;\n  border: none;\n  font-size: 22px;\n  margin-top: 20px;\n  border-radius: 8px;\n}\n\nbutton:hover {\n  color: black;\n  box-shadow: rgba(195, 28, 28, 0.55) 0px 0px 0px 4px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}